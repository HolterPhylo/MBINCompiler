name: MBINCompiler

on:
  # Run on all branches except for the gh-pages branch
  push:
    branches-ignore:
      - 'gh-pages'
  pull_request:
    branches-ignore:
      - 'gh-pages'
  create:

jobs:
  build-dotnet4:
    name: Build .NET 4 artefacts
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Windows net452 binary
        run: dotnet publish libMBIN-DLL -c Release -f net452 -r win-x64 -o Build/Release/net4/ /nowarn:cs0618
      - name: Move some files to rename them
        run: cp Build/Release/net4/libMBIN.dll libMBIN-dotnet4.dll
      - name: Upload binary for release
        uses: actions/upload-artifact@v3
        with:
          name: MBINCompiler
          path: libMBIN-dotnet4.dll
  build-dotnet5:
    name: Build .NET 5 artefacts
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Build Windows .NET 5 binaries
        run: |
          dotnet publish libMBIN-DLL -c Release -f net5.0-windows -r win-x64 -o Build/Release/net5/ /nowarn:cs0618
          dotnet publish MBINCompiler -c Release -f net5.0-windows -r win-x64 -o Build/Release/net5/ /nowarn:cs0618
      - name: Move the exe so the tests can find it easier
        run: |
          cp Build/Release/net5/MBINCompiler.exe MBINCompiler.exe
          cp Build/Release/net5/libMBIN.dll libMBIN.dll
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests
      - name: Run tests
        run: python -m pytest --mbincompiler_path="" --tb=no --report
      - name: Upload binary for release
        uses: actions/upload-artifact@v3
        with:
          name: MBINCompiler
          path: |
            MBINCompiler.exe
            libMBIN.dll
            report.json
  build-dotnet6:
    name: Build .NET 6 artefacts
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Windows .NET 6 binaries
        run: |
          dotnet publish libMBIN-DLL -c Release -f net6.0-windows -r win-x64 -o Build/Release/net6/ /nowarn:cs0618
          dotnet publish SaveFileMapping -c Release -f net6.0-windows -r win-x64 -o Build/Release/net6/ /nowarn:cs0618
      - name: Move some files to rename them
        run: cp Build/Release/net6/libMBIN.dll libMBIN-dotnet6.dll
      - name: Generate save data mapping
        run : Build/Release/net6/SaveFileMapping.exe
        shell: bash
      - name: Upload binary for release
        uses: actions/upload-artifact@v3
        with:
          name: MBINCompiler
          path: |
            libMBIN-dotnet6.dll
            mapping.json
  release:
    name: Release MBINCompiler binaries and other data
    # Only run this job if the commit was tagged.
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: windows-latest
    needs: [build-dotnet4, build-dotnet5, build-dotnet6]
    steps:
      - name: Download files for release
        uses: actions/download-artifact@v2
        with:
          name: MBINCompiler
      - name: Get MBINCompiler tag version
        run: |
          echo "VERSION=$(Build/Release/net5/MBINCompiler.exe version | awk '{print $2}')" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
        shell: bash
      - name: Upload resources if version matches
        if: env.VERSION == env.TAG
        uses: softprops/action-gh-release@v1
        with:
          name: "${{ env.TAG }}"
          tag_name: ${{ env.TAG }}
          files: |
            MBINCompiler.exe
            libMBIN.dll
            libMBIN-dotnet4.dll
            libMBIN-dotnet6.dll
            mapping.json
            report.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if tag doesn't match version
        if: env.VERSION != env.TAG
        run: |
          echo "There is a version mismatch between the tag and MBINCompiler version!"
          exit 1
        shell: bash
